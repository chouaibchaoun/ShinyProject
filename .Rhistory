View(characters)
View(appearances)
View(characters)
View(episodes)
View(scenes)
View(scenes_locations)
runApp()
runApp()
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDied <- WhoDied %>% inner_join(cast) %>% left_join(LastApperance)
ggplot(WhoDied)+ geom_bar(aes(y=name,x=sceneId/60))+theme_bw()+ggtitle("Temps d'apparition cumulé par personnage et saison")
episode_n <- 3
saison_n <- 8
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
cast <- appearances %>% filter(sceneId %in% SceneIds)
View(cast)
WhoDied <- WhoDied %>% left_join(cast) %>% left_join(LastApperance)
WhoDied <- WhoDied %>% left_join(cast) %>% left_join(LastApperance) %>% filter(! is.na(sceneId))
runApp()
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDied <- WhoDied %>% left_join(cast) %>% left_join(LastApperance, by = name) %>% filter(! is.na(sceneId))
ggplot(WhoDied)+ geom_bar(aes(y=name,x=sceneId/60))+theme_bw()+ggtitle("Temps d'apparition cumulé par personnage et saison")
WhoDied <- WhoDied %>% left_join(cast) %>% left_join(LastApperance) %>% filter(! is.na(sceneId))
ggplot(WhoDied)+ geom_bar(aes(y=name,x=sceneId/60))+theme_bw()+ggtitle("Temps d'apparition cumulé par personnage et saison")
ggplot(WhoDied)+ geom_bar(aes(y=name)+theme_bw()+ggtitle("Temps d'apparition cumulé par personnage et saison")
}
ggplot(WhoDied)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Temps d'apparition cumulé par personnage et saison")
WhoDied <- WhoDied %>% left_join(cast) %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) )
ggplot(WhoDied)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Nmae by scene Id")
ggplot(WhoDied)+ geom_bar(aes(y=name,x=sceneId)) +theme_bw()+ggtitle("Nmae by scene Id")
ggplot(WhoDied)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Nmae by scene Id")
runApp()
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDied <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% left_join(cast)
WhoDied <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% left_join(cast)
WhoDied <- characters %>% filter(! is.na(killedBy))
View(wall)
View(WhoDied)
View(WhoDied)
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDied <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% left_join(cast)
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
View(WhoDied)
View(WhoDied)
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
cast <- appearances %>% filter(sceneId %in% SceneIds)
cast %>% inner_join(LastApperance)
WhoDied %>% inner_join(cast %>% inner_join(LastApperance))
WhoDied %>% left_join(cast %>% inner_join(LastApperance))
WhoDied %>% left_join(cast %>% inner_join(LastApperance)) %>% filter( ! is.na(sceneId))
episodeID <- 9
saison_n <- 4
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
cast <- appearances %>% filter(sceneId %in% SceneIds)
episode_n <- 9
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
cast <- appearances %>% filter(sceneId %in% SceneIds)
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDied <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% left_join(cast)
WhoDied <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
WhoDied <- characters %>% filter(! is.na(killedBy))
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
View(WhoDiedE)
View(WhoDiedE)
WhoDied %>% filter(name %in% WhoDiedE$name )
WhoDied %>% filter(name %in% WhoDiedE$name ) %>% left_join(WhoDiedE)
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
WhoDied <- whodied %>% filter(name %in% WhoDiedE$name ) %>% left_join(WhoDiedE)
ggplot(WhoDied)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Nmae by scene Id")
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
View(cast)
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
whodied %>% filter(name %in% WhoDiedE$name ) %>% left_join(WhoDiedE)
WhoDied <- whoDied %>% filter(name %in% WhoDiedE$name ) %>% left_join(WhoDiedE)
WhoDied
WhoDiedE
whoDied %>% filter(name %in% WhoDiedE$name ) %>% left_join(WhoDiedE)
whoDied %>% filter(name %in% WhoDiedE$name )
whoDied %>% filter(name %in% WhoDiedE$name )
WhoDiedE$name
Dead <- WhoDiedE$name
typeof(Dead)
"Styr"%in% Dead
whoDied %>% filter(name %in% Dead )
View(WhoDied)
View(WhoDied)
WhoDied <- characters %>% filter(! is.na(killedBy))
whoDied %>% filter(name %in% Dead )
whoDied %>% left_join(whoDiedE)
WhoDied
cast %>% filter(name %in% Dead)
WhoDied %>% filter(name %in% Dead)
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
Dead <- WhoDiedE$name
WhoDied <- whoDied %>% WhoDied %>% filter(name %in% Dead)
WhoDied_In <- whoDied %>% WhoDied %>% filter(name %in% Dead)
WhoDied_In <- WhoDied %>% filter(name %in% Dead)
View(WhoDied_In)
WhoDied_In <- WhoDied %>% filter(name %in% Dead) %>% left_join(WhoDiedE)
ggplot(WhoDied_In)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Nmae by scene Id")
runApp()
# importing libraries
library(readtext)
library(readr)
library(dplyr)
library(ggplot2)
library(sf)
# importing data
appearances = read_csv("./data/appearances.csv")
scenes = read_csv("./data/scenes.csv")
episodes = read_csv("./data/episodes.csv")
characters = read_csv("./data/characters.csv")
scenes_locations=st_read("data/GoTRelease/ScenesLocations.shp",crs=4326)
locations=st_read("./data/GoTRelease/Locations.shp",crs=4326)
lakes=st_read("./data/GoTRelease/Lakes.shp",crs=4326)
conts=st_read("./data/GoTRelease/Continents.shp",crs=4326)
land=st_read("./data/GoTRelease/Land.shp",crs=4326)
wall=st_read("./data/GoTRelease/Wall.shp",crs=4326)
islands=st_read("./data/GoTRelease/Islands.shp",crs=4326)
kingdoms=st_read("./data/GoTRelease/Political.shp",crs=4326)
landscapes=st_read("./data/GoTRelease/Landscape.shp",crs=4326)
roads=st_read("./data/GoTRelease/Roads.shp",crs=4326)
rivers=st_read("./data/GoTRelease/Rivers.shp",crs=4326)
# Plot Colors
colforest="#c0d7c2"
colriver="#7ec9dc"
colriver="#d7eef4"
colland="ivory"
borderland = "ivory3"
colors = c("YlOrRd", "YlGnBu","YlGn", "BuPu","RdPu","Accent", "Dark2","Paired")
# Utilities functions
get_sublocation_coord <- function(sublocation) {
out <- tryCatch(
{
filter(locations , name == sublocation)$geometry %>% unique() %>% .[1]  # TODO the output is a list it might cause a problem during visualisation
},
error=function(cond) {
return(NA)
}
)
return (out)
}
#Plot
plot1 <- function(episode_n,saison_n){
# Getting Data
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
############# Unsed lines #########################
Data <- scenes[scenes$episodeId == episodeID,]
Data$geometry <- lapply(Data$subLocation , get_sublocation_coord)
###################################################
Data2 <- scenes %>% filter(episodeId == episodeID) %>% group_by(subLocation) %>% summarize(duration = sum(duration))
Data2_js <- locations %>% left_join(Data2,by = c("name"="subLocation"))
# Constructing the map visualisation
ggplot()+geom_sf(data=land,fill=colland,col=borderland,size=0.1)+
geom_sf(data=islands,fill=colland,col="ivory3")+
geom_sf(data=landscapes %>% filter(type=="forest"),fill=colforest,col=colforest,alpha=0.7)+
geom_sf(data=rivers,col=colriver)+
geom_sf(data=lakes,col=colriver,fill=colriver)+
geom_sf(data=wall,col="black",size=1)+
geom_sf(data=Data2_js,aes(size=duration/1000),color="#f564e3")+
geom_sf_text(data= locations %>% filter(size>4,name!='Tolos'),aes(label=name),size=2.8,family="Palatino", fontface="italic",vjust=0.7)+
theme_minimal()+coord_sf(expand = 0,ndiscr = 0)+
scale_size_area("Durées (min) :",max_size = 16,breaks=c(30,60,120,240))+
theme(panel.background = element_rect(fill = colriver,color=NA),legend.position = "bottom") +
labs(title = "Repartition spaciale des scenes",x="",y="")
}
plot2 <- function(episode_n,saison_n) {
# Getting Data
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
Dead <- WhoDiedE$name
WhoDied_In <- WhoDied %>% filter(name %in% Dead) %>% left_join(WhoDiedE)
ggplot(WhoDied_In)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Nmae by scene Id")
}
episode_n = 9
saison_n = 4
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
############# Unsed lines #########################
Data <- scenes[scenes$episodeId == episodeID,]
Data$geometry <- lapply(Data$subLocation , get_sublocation_coord)
Data2 <- scenes %>% filter(episodeId == episodeID) %>% group_by(subLocation) %>% summarize(duration = sum(duration))
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
Dead <- WhoDiedE$name
WhoDied_In <- WhoDied %>% filter(name %in% Dead) %>% left_join(WhoDiedE)
ggplot(WhoDied_In)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Nmae by scene Id")
saison_n = 1
episode_n = 1
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
Dead <- WhoDiedE$name
WhoDied_In <- WhoDied %>% filter(name %in% Dead) %>% left_join(WhoDiedE)
ggplot(WhoDied_In)+ geom_bar(aes(y=name)) +theme_bw()+ggtitle("Nmae by scene Id")
runApp()
ggplot(WhoDied_In)+ geom_bar(aes(y=killedBy)) +theme_bw()+ggtitle("Nmae by scene Id")
library(ggraph)
install.packages("ggraph")
install.packages("tidygraph")
install.packages("stringr")
# importing libraries
library(readtext)
library(readr)
library(dplyr)
library(ggplot2)
library(sf)
library(tidygraph)
library(ggraph)
library(stringr)
# importing data
appearances = read_csv("./data/appearances.csv")
scenes = read_csv("./data/scenes.csv")
episodes = read_csv("./data/episodes.csv")
characters = read_csv("./data/characters.csv")
scenes_locations=st_read("data/GoTRelease/ScenesLocations.shp",crs=4326)
locations=st_read("./data/GoTRelease/Locations.shp",crs=4326)
lakes=st_read("./data/GoTRelease/Lakes.shp",crs=4326)
conts=st_read("./data/GoTRelease/Continents.shp",crs=4326)
land=st_read("./data/GoTRelease/Land.shp",crs=4326)
wall=st_read("./data/GoTRelease/Wall.shp",crs=4326)
islands=st_read("./data/GoTRelease/Islands.shp",crs=4326)
kingdoms=st_read("./data/GoTRelease/Political.shp",crs=4326)
landscapes=st_read("./data/GoTRelease/Landscape.shp",crs=4326)
roads=st_read("./data/GoTRelease/Roads.shp",crs=4326)
rivers=st_read("./data/GoTRelease/Rivers.shp",crs=4326)
# Plot Colors
colforest="#c0d7c2"
colriver="#7ec9dc"
colriver="#d7eef4"
colland="ivory"
borderland = "ivory3"
colors = c("YlOrRd", "YlGnBu","YlGn", "BuPu","RdPu","Accent", "Dark2","Paired")
# Utilities functions
get_sublocation_coord <- function(sublocation) {
out <- tryCatch(
{
filter(locations , name == sublocation)$geometry %>% unique() %>% .[1]  # TODO the output is a list it might cause a problem during visualisation
},
error=function(cond) {
return(NA)
}
)
return (out)
}
episode_n <- 9
saison_n <- 4
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
WhoDied <- characters %>% filter(! is.na(killedBy))
LastApperance <- appearances %>% group_by(name)  %>% summarize(sceneId = max(sceneId))
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
WhoDiedE <- WhoDied  %>% left_join(LastApperance) %>% filter(! is.na(sceneId)) %>% group_by(name) %>% summarize(sceneId = max(sceneId) ) %>% inner_join(cast)
Dead <- WhoDiedE$name
WhoDied_In <- WhoDied %>% filter(name %in% Dead) %>% left_join(WhoDiedE)
Died <- WhoDied_In[name,killedBy]
WhoDied_In %>% select(name,killedBy)
Died <- WhoDied_In %>% select(name,killedBy)
graphroutes <- as_tbl_graph(Died)
graphroutes
graph_routes <- graphroutes %>%
activate(nodes) %>%
mutate(
title = str_to_title(name),
label = str_replace_all(title, " ", "\n")
)
graph_routes
graph_routes %>%
ggraph(layout = "kk") +
geom_node_point() +
geom_edge_diagonal()
graph_routes %>%
ggraph(layout = "kk") +
geom_node_text(aes(label = label, color = name), size = 3) +
geom_edge_diagonal(color = "gray", alpha = 0.4)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(arrow = arrow(length = unit(4, 'mm'))) +
geom_node_point(size = 5)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(arrow = arrow(length = unit(4, 'mm'))) +
geom_node_point(size = 5)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(arrow = arrow(length = unit(4, 'mm'))) + geom_node_text(aes(label = label, color = name), size = 3) +
geom_node_point(size = 5)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(arrow = arrow(length = unit(4, 'mm'))) + geom_node_text(aes(label = label), size = 3) +
geom_node_point(size = 5)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(arrow = ! arrow(length = unit(4, 'mm'))) + geom_node_text(aes(label = label), size = 3) +
geom_node_point(size = 5)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node2.name),
end_cap = label_rect(node1.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node2.name),
end_cap = label_rect(node1.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_text(aes(label = name))
Died <- WhoDied_In %>% select(killedBy,name)
Died
graphroutes <- as_tbl_graph(Died)
graph_routes <- graphroutes %>%
activate(nodes) %>%
mutate(
title = str_to_title(name),
label = str_replace_all(title, " ", "\n")
)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node2.name),
end_cap = label_rect(node1.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'linear', circular = TRUE) +
geom_edge_arc(arrow = arrow(length = unit(4, 'mm')),
start_cap = circle(3, 'mm'),
end_cap = circle(3, 'mm')) +
geom_node_point(size = 5) +
coord_fixed()
ggraph(graph_routes, layout = 'linear', circular = TRUE) +
geom_edge_arc(arrow = arrow(length = unit(4, 'mm')),
start_cap = circle(3, 'mm'),
end_cap = circle(3, 'mm')) + geom_node_text(aes(label = label ), size = 3)
geom_node_point(size = 5) +
coord_fixed()
ggraph(graph_routes, layout = 'linear', circular = TRUE) +
geom_edge_arc(arrow = arrow(length = unit(4, 'mm')),
start_cap = circle(3, 'mm'),
end_cap = circle(3, 'mm')) + geom_node_text(aes(label = label ), size = 3)
geom_node_point(size = 5) +
coord_fixed()
ggraph(graph_routes, layout = 'linear', circular = TRUE) +
geom_edge_arc(arrow = arrow(length = unit(4, 'mm')),
start_cap = circle(3, 'mm'),
end_cap = circle(3, 'mm'))  + geom_node_text(aes(label = label), size = 3)
geom_node_point(size = 5) +
coord_fixed()
ggraph(graph_routes, layout = 'linear', circular = TRUE) +
geom_edge_arc(arrow = arrow(length = unit(3, 'mm')),
start_cap = circle(3, 'mm'),
end_cap = circle(3, 'mm'))  + geom_node_text(aes(label = label), size = 5)
geom_node_point(size = 5) +
coord_fixed()
ggraph(graph_routes, layout = 'dendrogram') +
geom_edge_elbow2(aes(colour = node.class))
ggraph(graph_routes, layout = 'dendrogram') +
geom_edge_elbow2()
graph_routes %>%
ggraph(layout = "kk") +
geom_node_text(aes(label = label, color = name), size = 3) +
geom_edge_diagonal(color = "gray", alpha = 0.4)
graph_routes %>%
ggraph(layout = "kk") +
geom_node_text(aes(label = label, color = name), size = 3) +
geom_edge_diagonal(color = "gray", alpha = 0.4)
graph_routes %>%
ggraph(layout = "kk") +
geom_edge_arc(arrow = arrow(length = unit(3, 'mm')),
+                   start_cap = circle(3, 'mm'),
+                   end_cap = circle(3, 'mm')) +
geom_node_text(aes(label = label, color = name), size = 3) +
geom_edge_diagonal(color = "gray", alpha = 0.4)
graph_routes %>%
ggraph(layout = "kk") +
geom_edge_arc(arrow = arrow(length = unit(3, 'mm')),start_cap = circle(3, 'mm'),end_cap = circle(3, 'mm')) +
geom_node_text(aes(label = label, color = name), size = 3) +
geom_edge_diagonal(color = "gray", alpha = 0.4)
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(label = "KilledBy")) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
+     geom_edge_link(aes(start_cap = label_rect(node1.name),
+                        end_cap = label_rect(node2.name)),
+                    arrow = arrow(length = unit(4, 'mm'))) +
+     geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(4, 'mm'))) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(7, 'mm'))) +
geom_node_text(aes(label = name))
ggraph(graph_routes, layout = 'graphopt') +
geom_edge_link(aes(start_cap = label_rect(node1.name),
end_cap = label_rect(node2.name)),
arrow = arrow(length = unit(2, 'mm'))) +
geom_node_text(aes(label = name))
runApp()
geom_node_text(aes(label = name))
cast %>% left_join(scenes)
cast %>% left_join(scenes) %>% group_by(name)
cast %>% left_join(scenes) %>% group_by(name) %>% sumamrize(duration = sum(duration))
cast %>% left_join(scenes) %>% group_by(name) %>% summarize(duration = sum(duration))
episodeID = episodes[episodes$episodeNum==episode_n & episodes$seasonNum == saison_n,]$episodeId ##getting the episode id
SceneIds <- scenes %>% filter(episodeId == episodeID) %>% .$sceneId
cast <- appearances %>% filter(sceneId %in% SceneIds)
Duration <- cast %>% left_join(scenes) %>% group_by(name) %>% summarize(duration = sum(duration))
ggplotly(ggplot(Duration,aes(x=name,y=duration))+
geom_point(aes(size=nbdeath))+
geom_text(data=labels,aes(label=episodeTitle),vjust=-0.6)+
scale_x_continuous("Nombre de scènes",limits = c(0,280))+
scale_y_continuous("Durée de la scène la plus longue",limits = c(100,800))+
scale_color_brewer("Saison",palette ="Spectral")+
guides(colour = "legend", size = "legend")+
theme_bw())})
cast %>% left_join(scenes)
cast
View(Duration)
gglot(Duration)
ggplot(Duration)+geom_point(aes(x=name,y=Duration))
ggplot(data=Duration)+
geom_bar(aes(x=name,y=Duration),stat = 'identity')+
scale_x_discrete("Manufacturer")+
scale_y_continuous("Miles / Gallon (City conditions)")
ggplot(data=Duration)+
geom_bar(aes(x=name,y=duration),stat = 'identity')+
scale_x_discrete("Manufacturer")+
scale_y_continuous("Miles / Gallon (City conditions)")
ggplot(data=Duration)+
geom_bar(aes(x=name,y=Duration),stat = 'identity')+
scale_x_discrete("Manufacturer")+
scale_y_continuous("Miles / Gallon (City conditions)")+
coord_flip()
ggplot(data=Duration)+
geom_bar(aes(x=name,y=duration),stat = 'identity')+
scale_x_discrete("Manufacturer")+
scale_y_continuous("Miles / Gallon (City conditions)")+
coord_flip()
Duration %>% arrange(desc(duration))
Duration <- cast %>% left_join(scenes) %>% group_by(name) %>% summarize(duration = sum(duration)) %>% arrange(desc(duration))
ggplot(data=Duration)+
geom_bar(aes(x=name,y=duration),stat = 'identity')+
scale_x_discrete("Cast Members")+
scale_y_continuous("Total duration of appearances")+
coord_flip()
Duration <- cast %>% left_join(scenes) %>% group_by(name) %>% summarize(duration = sum(duration)) %>% arrange(desc(duration))
ggplot(data=Duration)+
geom_bar(aes(x=name,y=duration),stat = 'identity')+
scale_x_discrete("Cast Members")+
scale_y_continuous("Total duration of appearances")+
coord_flip()
ggplot(data=Duration)+
runApp()
runApp()
install.packages('rsconnect')
rsconnect::setAccountInfo(name='chouaibchaoun', token='A4BF38B4264EDC2BF183712750903F21', secret='BTGM+VYypDk86CBWVinvlqwvz/TvIg8q92lVtXpN')
install.packages('rsconnect')
install.packages('rsconnect')
runApp()
